syntax = "proto3";
package zetachain.zetacore.observer;

import "gogoproto/gogo.proto";
import "zetachain/zetacore/observer/blame.proto";
import "zetachain/zetacore/observer/crosschain_flags.proto";
import "zetachain/zetacore/observer/observer.proto";
import "zetachain/zetacore/observer/params.proto";
import "zetachain/zetacore/observer/pending_nonces.proto";
import "zetachain/zetacore/observer/tss.proto";
import "zetachain/zetacore/pkg/chains/chains.proto";
import "zetachain/zetacore/pkg/proofs/proofs.proto";

option go_package = "github.com/zeta-chain/node/x/observer/types";

// Msg defines the Msg service.
service Msg {
  rpc AddObserver(MsgAddObserver) returns (MsgAddObserverResponse);
  rpc UpdateObserver(MsgUpdateObserver) returns (MsgUpdateObserverResponse);
  rpc UpdateChainParams(MsgUpdateChainParams)
      returns (MsgUpdateChainParamsResponse);
  rpc RemoveChainParams(MsgRemoveChainParams)
      returns (MsgRemoveChainParamsResponse);
  rpc VoteBlame(MsgVoteBlame) returns (MsgVoteBlameResponse);
  rpc UpdateKeygen(MsgUpdateKeygen) returns (MsgUpdateKeygenResponse);
  rpc VoteBlockHeader(MsgVoteBlockHeader) returns (MsgVoteBlockHeaderResponse);
  rpc ResetChainNonces(MsgResetChainNonces)
      returns (MsgResetChainNoncesResponse);
  rpc VoteTSS(MsgVoteTSS) returns (MsgVoteTSSResponse);
  rpc EnableCCTX(MsgEnableCCTX) returns (MsgEnableCCTXResponse);
  rpc DisableCCTX(MsgDisableCCTX) returns (MsgDisableCCTXResponse);
  rpc UpdateGasPriceIncreaseFlags(MsgUpdateGasPriceIncreaseFlags)
      returns (MsgUpdateGasPriceIncreaseFlagsResponse);
}

message MsgUpdateObserver {
  string creator = 1;
  string old_observer_address = 2;
  string new_observer_address = 3;
  ObserverUpdateReason update_reason = 4;
}
message MsgUpdateObserverResponse {}

message MsgVoteBlockHeader {
  string creator = 1;
  int64 chain_id = 2;
  bytes block_hash = 3;
  int64 height = 4;
  pkg.proofs.HeaderData header = 5 [ (gogoproto.nullable) = false ];
}

message MsgVoteBlockHeaderResponse {
  bool ballot_created = 1;
  bool vote_finalized = 2;
}

message MsgUpdateChainParams {
  string creator = 1;
  ChainParams chainParams = 2;
}

message MsgUpdateChainParamsResponse {}

message MsgRemoveChainParams {
  string creator = 1;
  int64 chain_id = 2;
}

message MsgRemoveChainParamsResponse {}

message MsgAddObserver {
  string creator = 1;
  string observer_address = 2;
  string zetaclient_grantee_pubkey = 3;
  bool add_node_account_only = 4;
}

message MsgAddObserverResponse {}

message MsgVoteBlame {
  string creator = 1;
  int64 chain_id = 2;
  Blame blame_info = 3 [ (gogoproto.nullable) = false ];
}

message MsgVoteBlameResponse {}

message MsgUpdateKeygen {
  string creator = 1;
  int64 block = 2;
}

message MsgUpdateKeygenResponse {}

message MsgResetChainNonces {
  string creator = 1;
  int64 chain_id = 2;
  int64 chain_nonce_low = 3;
  int64 chain_nonce_high = 4;
}

message MsgResetChainNoncesResponse {}

message MsgVoteTSS {
  string creator = 1;
  string tss_pubkey = 2;
  int64 keygen_zeta_height = 3;
  pkg.chains.ReceiveStatus status = 4;
}

message MsgVoteTSSResponse {
  bool ballot_created = 1;
  bool vote_finalized = 2;
  bool keygen_success = 3;
}

message MsgEnableCCTX {
  string creator = 1;
  bool enableInbound = 2;
  bool enableOutbound = 3;
}

message MsgEnableCCTXResponse {}

message MsgDisableCCTX {
  string creator = 1;
  bool disableInbound = 2;
  bool disableOutbound = 3;
}

message MsgDisableCCTXResponse {}

message MsgUpdateGasPriceIncreaseFlags {
  string creator = 1;
  GasPriceIncreaseFlags gasPriceIncreaseFlags = 2
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateGasPriceIncreaseFlagsResponse {}