syntax = "proto3";
package zetachain.zetacore.crosschain;

import "gogoproto/gogo.proto";
import "zetachain/zetacore/pkg/coin/coin.proto";

// TODO : fix the descriptor numbers for the fields
//  https://github.com/zeta-chain/node/issues/1951
option go_package = "github.com/zeta-chain/node/x/crosschain/types";

enum CctxStatus {
  option (gogoproto.goproto_enum_stringer) = true;
  PendingInbound = 0;  // some observer sees inbound tx
  PendingOutbound = 1; // super majority observer see inbound tx
  OutboundMined = 3;   // the corresponding outbound tx is mined
  PendingRevert = 4;   // outbound cannot succeed; should revert inbound
  Reverted = 5;        // inbound reverted.
  Aborted =
      6; // inbound tx error or invalid paramters and cannot revert; just abort.
  // But the amount can be refunded to zetachain using and admin proposal
}

enum TxFinalizationStatus {
  option (gogoproto.goproto_enum_stringer) = true;
  NotFinalized = 0; // the corresponding tx is not finalized
  Finalized = 1;    // the corresponding tx is finalized but not executed yet
  Executed = 2;     // the corresponding tx is executed
}
message InboundParams {
  string sender = 1; // this address is the immediate contract/EOA that calls
  // the Connector.send()
  int64 sender_chain_id = 2;
  string tx_origin = 3; // this address is the EOA that signs the inbound tx
  pkg.coin.CoinType coin_type = 4;
  string asset =
      5; // for ERC20 coin type, the asset is an address of the ERC20 contract
  string amount = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
  string observed_hash = 7;
  uint64 observed_external_height = 8;
  string ballot_index = 9;
  uint64 finalized_zeta_height = 10;
  TxFinalizationStatus tx_finalization_status = 11;
}

message ZetaAccounting {
  // aborted_zeta_amount stores the total aborted amount for cctx of coin-type
  // ZETA
  string aborted_zeta_amount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}

message OutboundParams {
  string receiver = 1;
  int64 receiver_chainId = 2;
  pkg.coin.CoinType coin_type = 3;
  string amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
  uint64 tss_nonce = 5;
  uint64 gas_limit = 6;
  string gas_price = 7;
  string gas_priority_fee = 23;
  // the above are commands for zetaclients
  // the following fields are used when the outbound tx is mined
  string hash = 8;
  string ballot_index = 9;
  uint64 observed_external_height = 10;
  uint64 gas_used = 20;
  string effective_gas_price = 21 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 effective_gas_limit = 22;
  string tss_pubkey = 11;
  TxFinalizationStatus tx_finalization_status = 12;

  // not used. do not edit.
  reserved 13 to 19;
}

message Status {
  CctxStatus status = 1;
  string status_message = 2;
  int64 lastUpdate_timestamp = 3;
  bool isAbortRefunded = 4;
  // when the CCTX was created. only populated on new transactions.
  int64 created_timestamp = 5;
}

// ProtocolContractVersion represents the version of the protocol contract used
// for cctx workflow
enum ProtocolContractVersion {
  option (gogoproto.goproto_enum_stringer) = true;
  V1 = 0;
  V2 = 1;
}

// RevertOptions represents the options for reverting a cctx
message RevertOptions {
  string revert_address = 1;
  bool call_on_revert = 2;
  string abort_address = 3;
  bytes revert_message = 4;
  string revert_gas_limit = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}

message CrossChainTx {
  string creator = 1;
  string index = 2;
  string zeta_fees = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"zeta_fees\""
  ];
  string relayed_message = 6; // Not used by protocol , just relayed across
  Status cctx_status = 8;
  InboundParams inbound_params = 9;
  repeated OutboundParams outbound_params = 10;
  ProtocolContractVersion protocol_contract_version = 11;
  RevertOptions revert_options = 12 [ (gogoproto.nullable) = false ];
}
