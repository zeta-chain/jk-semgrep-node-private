// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file zetachain/zetacore/crosschain/query.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { OutboundTracker } from "./outbound_tracker_pb.js";
import type { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import type { InboundTracker } from "./inbound_tracker_pb.js";
import type { InboundHashToCctx } from "./inbound_hash_to_cctx_pb.js";
import type { CrossChainTx } from "./cross_chain_tx_pb.js";
import type { GasPrice } from "./gas_price_pb.js";
import type { LastBlockHeight } from "./last_block_height_pb.js";
import type { RateLimiterFlags } from "./rate_limiter_flags_pb.js";

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZetaAccountingRequest
 */
export declare class QueryZetaAccountingRequest extends Message<QueryZetaAccountingRequest> {
  constructor(data?: PartialMessage<QueryZetaAccountingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryZetaAccountingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryZetaAccountingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryZetaAccountingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryZetaAccountingRequest;

  static equals(a: QueryZetaAccountingRequest | PlainMessage<QueryZetaAccountingRequest> | undefined, b: QueryZetaAccountingRequest | PlainMessage<QueryZetaAccountingRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZetaAccountingResponse
 */
export declare class QueryZetaAccountingResponse extends Message<QueryZetaAccountingResponse> {
  /**
   * @generated from field: string aborted_zeta_amount = 1;
   */
  abortedZetaAmount: string;

  constructor(data?: PartialMessage<QueryZetaAccountingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryZetaAccountingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryZetaAccountingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryZetaAccountingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryZetaAccountingResponse;

  static equals(a: QueryZetaAccountingResponse | PlainMessage<QueryZetaAccountingResponse> | undefined, b: QueryZetaAccountingResponse | PlainMessage<QueryZetaAccountingResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetOutboundTrackerRequest
 */
export declare class QueryGetOutboundTrackerRequest extends Message<QueryGetOutboundTrackerRequest> {
  /**
   * @generated from field: int64 chainID = 1;
   */
  chainID: bigint;

  /**
   * @generated from field: uint64 nonce = 2;
   */
  nonce: bigint;

  constructor(data?: PartialMessage<QueryGetOutboundTrackerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetOutboundTrackerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOutboundTrackerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOutboundTrackerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOutboundTrackerRequest;

  static equals(a: QueryGetOutboundTrackerRequest | PlainMessage<QueryGetOutboundTrackerRequest> | undefined, b: QueryGetOutboundTrackerRequest | PlainMessage<QueryGetOutboundTrackerRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetOutboundTrackerResponse
 */
export declare class QueryGetOutboundTrackerResponse extends Message<QueryGetOutboundTrackerResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.OutboundTracker outboundTracker = 1;
   */
  outboundTracker?: OutboundTracker;

  constructor(data?: PartialMessage<QueryGetOutboundTrackerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetOutboundTrackerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOutboundTrackerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOutboundTrackerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOutboundTrackerResponse;

  static equals(a: QueryGetOutboundTrackerResponse | PlainMessage<QueryGetOutboundTrackerResponse> | undefined, b: QueryGetOutboundTrackerResponse | PlainMessage<QueryGetOutboundTrackerResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutboundTrackerRequest
 */
export declare class QueryAllOutboundTrackerRequest extends Message<QueryAllOutboundTrackerRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllOutboundTrackerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllOutboundTrackerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOutboundTrackerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerRequest;

  static equals(a: QueryAllOutboundTrackerRequest | PlainMessage<QueryAllOutboundTrackerRequest> | undefined, b: QueryAllOutboundTrackerRequest | PlainMessage<QueryAllOutboundTrackerRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutboundTrackerResponse
 */
export declare class QueryAllOutboundTrackerResponse extends Message<QueryAllOutboundTrackerResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.OutboundTracker outboundTracker = 1;
   */
  outboundTracker: OutboundTracker[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllOutboundTrackerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllOutboundTrackerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOutboundTrackerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerResponse;

  static equals(a: QueryAllOutboundTrackerResponse | PlainMessage<QueryAllOutboundTrackerResponse> | undefined, b: QueryAllOutboundTrackerResponse | PlainMessage<QueryAllOutboundTrackerResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutboundTrackerByChainRequest
 */
export declare class QueryAllOutboundTrackerByChainRequest extends Message<QueryAllOutboundTrackerByChainRequest> {
  /**
   * @generated from field: int64 chain = 1;
   */
  chain: bigint;

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllOutboundTrackerByChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllOutboundTrackerByChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOutboundTrackerByChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerByChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerByChainRequest;

  static equals(a: QueryAllOutboundTrackerByChainRequest | PlainMessage<QueryAllOutboundTrackerByChainRequest> | undefined, b: QueryAllOutboundTrackerByChainRequest | PlainMessage<QueryAllOutboundTrackerByChainRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutboundTrackerByChainResponse
 */
export declare class QueryAllOutboundTrackerByChainResponse extends Message<QueryAllOutboundTrackerByChainResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.OutboundTracker outboundTracker = 1;
   */
  outboundTracker: OutboundTracker[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllOutboundTrackerByChainResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllOutboundTrackerByChainResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOutboundTrackerByChainResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerByChainResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOutboundTrackerByChainResponse;

  static equals(a: QueryAllOutboundTrackerByChainResponse | PlainMessage<QueryAllOutboundTrackerByChainResponse> | undefined, b: QueryAllOutboundTrackerByChainResponse | PlainMessage<QueryAllOutboundTrackerByChainResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundTrackerByChainRequest
 */
export declare class QueryAllInboundTrackerByChainRequest extends Message<QueryAllInboundTrackerByChainRequest> {
  /**
   * @generated from field: int64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllInboundTrackerByChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundTrackerByChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundTrackerByChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundTrackerByChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundTrackerByChainRequest;

  static equals(a: QueryAllInboundTrackerByChainRequest | PlainMessage<QueryAllInboundTrackerByChainRequest> | undefined, b: QueryAllInboundTrackerByChainRequest | PlainMessage<QueryAllInboundTrackerByChainRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundTrackerByChainResponse
 */
export declare class QueryAllInboundTrackerByChainResponse extends Message<QueryAllInboundTrackerByChainResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.InboundTracker inboundTracker = 1;
   */
  inboundTracker: InboundTracker[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllInboundTrackerByChainResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundTrackerByChainResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundTrackerByChainResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundTrackerByChainResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundTrackerByChainResponse;

  static equals(a: QueryAllInboundTrackerByChainResponse | PlainMessage<QueryAllInboundTrackerByChainResponse> | undefined, b: QueryAllInboundTrackerByChainResponse | PlainMessage<QueryAllInboundTrackerByChainResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundTrackersRequest
 */
export declare class QueryAllInboundTrackersRequest extends Message<QueryAllInboundTrackersRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllInboundTrackersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundTrackersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundTrackersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundTrackersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundTrackersRequest;

  static equals(a: QueryAllInboundTrackersRequest | PlainMessage<QueryAllInboundTrackersRequest> | undefined, b: QueryAllInboundTrackersRequest | PlainMessage<QueryAllInboundTrackersRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundTrackersResponse
 */
export declare class QueryAllInboundTrackersResponse extends Message<QueryAllInboundTrackersResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.InboundTracker inboundTracker = 1;
   */
  inboundTracker: InboundTracker[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllInboundTrackersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundTrackersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundTrackersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundTrackersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundTrackersResponse;

  static equals(a: QueryAllInboundTrackersResponse | PlainMessage<QueryAllInboundTrackersResponse> | undefined, b: QueryAllInboundTrackersResponse | PlainMessage<QueryAllInboundTrackersResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetInboundHashToCctxRequest
 */
export declare class QueryGetInboundHashToCctxRequest extends Message<QueryGetInboundHashToCctxRequest> {
  /**
   * @generated from field: string inboundHash = 1;
   */
  inboundHash: string;

  constructor(data?: PartialMessage<QueryGetInboundHashToCctxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetInboundHashToCctxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetInboundHashToCctxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetInboundHashToCctxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetInboundHashToCctxRequest;

  static equals(a: QueryGetInboundHashToCctxRequest | PlainMessage<QueryGetInboundHashToCctxRequest> | undefined, b: QueryGetInboundHashToCctxRequest | PlainMessage<QueryGetInboundHashToCctxRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetInboundHashToCctxResponse
 */
export declare class QueryGetInboundHashToCctxResponse extends Message<QueryGetInboundHashToCctxResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.InboundHashToCctx inboundHashToCctx = 1;
   */
  inboundHashToCctx?: InboundHashToCctx;

  constructor(data?: PartialMessage<QueryGetInboundHashToCctxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetInboundHashToCctxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetInboundHashToCctxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetInboundHashToCctxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetInboundHashToCctxResponse;

  static equals(a: QueryGetInboundHashToCctxResponse | PlainMessage<QueryGetInboundHashToCctxResponse> | undefined, b: QueryGetInboundHashToCctxResponse | PlainMessage<QueryGetInboundHashToCctxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryInboundHashToCctxDataRequest
 */
export declare class QueryInboundHashToCctxDataRequest extends Message<QueryInboundHashToCctxDataRequest> {
  /**
   * @generated from field: string inboundHash = 1;
   */
  inboundHash: string;

  constructor(data?: PartialMessage<QueryInboundHashToCctxDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryInboundHashToCctxDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInboundHashToCctxDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInboundHashToCctxDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInboundHashToCctxDataRequest;

  static equals(a: QueryInboundHashToCctxDataRequest | PlainMessage<QueryInboundHashToCctxDataRequest> | undefined, b: QueryInboundHashToCctxDataRequest | PlainMessage<QueryInboundHashToCctxDataRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryInboundHashToCctxDataResponse
 */
export declare class QueryInboundHashToCctxDataResponse extends Message<QueryInboundHashToCctxDataResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx CrossChainTxs = 1;
   */
  CrossChainTxs: CrossChainTx[];

  constructor(data?: PartialMessage<QueryInboundHashToCctxDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryInboundHashToCctxDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInboundHashToCctxDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInboundHashToCctxDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInboundHashToCctxDataResponse;

  static equals(a: QueryInboundHashToCctxDataResponse | PlainMessage<QueryInboundHashToCctxDataResponse> | undefined, b: QueryInboundHashToCctxDataResponse | PlainMessage<QueryInboundHashToCctxDataResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundHashToCctxRequest
 */
export declare class QueryAllInboundHashToCctxRequest extends Message<QueryAllInboundHashToCctxRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllInboundHashToCctxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundHashToCctxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundHashToCctxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundHashToCctxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundHashToCctxRequest;

  static equals(a: QueryAllInboundHashToCctxRequest | PlainMessage<QueryAllInboundHashToCctxRequest> | undefined, b: QueryAllInboundHashToCctxRequest | PlainMessage<QueryAllInboundHashToCctxRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInboundHashToCctxResponse
 */
export declare class QueryAllInboundHashToCctxResponse extends Message<QueryAllInboundHashToCctxResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.InboundHashToCctx inboundHashToCctx = 1;
   */
  inboundHashToCctx: InboundHashToCctx[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllInboundHashToCctxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllInboundHashToCctxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllInboundHashToCctxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllInboundHashToCctxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllInboundHashToCctxResponse;

  static equals(a: QueryAllInboundHashToCctxResponse | PlainMessage<QueryAllInboundHashToCctxResponse> | undefined, b: QueryAllInboundHashToCctxResponse | PlainMessage<QueryAllInboundHashToCctxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetGasPriceRequest
 */
export declare class QueryGetGasPriceRequest extends Message<QueryGetGasPriceRequest> {
  /**
   * @generated from field: string index = 1;
   */
  index: string;

  constructor(data?: PartialMessage<QueryGetGasPriceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetGasPriceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetGasPriceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetGasPriceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetGasPriceRequest;

  static equals(a: QueryGetGasPriceRequest | PlainMessage<QueryGetGasPriceRequest> | undefined, b: QueryGetGasPriceRequest | PlainMessage<QueryGetGasPriceRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetGasPriceResponse
 */
export declare class QueryGetGasPriceResponse extends Message<QueryGetGasPriceResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.GasPrice GasPrice = 1;
   */
  GasPrice?: GasPrice;

  constructor(data?: PartialMessage<QueryGetGasPriceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetGasPriceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetGasPriceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetGasPriceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetGasPriceResponse;

  static equals(a: QueryGetGasPriceResponse | PlainMessage<QueryGetGasPriceResponse> | undefined, b: QueryGetGasPriceResponse | PlainMessage<QueryGetGasPriceResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllGasPriceRequest
 */
export declare class QueryAllGasPriceRequest extends Message<QueryAllGasPriceRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllGasPriceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllGasPriceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllGasPriceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllGasPriceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllGasPriceRequest;

  static equals(a: QueryAllGasPriceRequest | PlainMessage<QueryAllGasPriceRequest> | undefined, b: QueryAllGasPriceRequest | PlainMessage<QueryAllGasPriceRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllGasPriceResponse
 */
export declare class QueryAllGasPriceResponse extends Message<QueryAllGasPriceResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.GasPrice GasPrice = 1;
   */
  GasPrice: GasPrice[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllGasPriceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllGasPriceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllGasPriceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllGasPriceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllGasPriceResponse;

  static equals(a: QueryAllGasPriceResponse | PlainMessage<QueryAllGasPriceResponse> | undefined, b: QueryAllGasPriceResponse | PlainMessage<QueryAllGasPriceResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetLastBlockHeightRequest
 */
export declare class QueryGetLastBlockHeightRequest extends Message<QueryGetLastBlockHeightRequest> {
  /**
   * @generated from field: string index = 1;
   */
  index: string;

  constructor(data?: PartialMessage<QueryGetLastBlockHeightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetLastBlockHeightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetLastBlockHeightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetLastBlockHeightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetLastBlockHeightRequest;

  static equals(a: QueryGetLastBlockHeightRequest | PlainMessage<QueryGetLastBlockHeightRequest> | undefined, b: QueryGetLastBlockHeightRequest | PlainMessage<QueryGetLastBlockHeightRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetLastBlockHeightResponse
 */
export declare class QueryGetLastBlockHeightResponse extends Message<QueryGetLastBlockHeightResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.LastBlockHeight LastBlockHeight = 1;
   */
  LastBlockHeight?: LastBlockHeight;

  constructor(data?: PartialMessage<QueryGetLastBlockHeightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetLastBlockHeightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetLastBlockHeightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetLastBlockHeightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetLastBlockHeightResponse;

  static equals(a: QueryGetLastBlockHeightResponse | PlainMessage<QueryGetLastBlockHeightResponse> | undefined, b: QueryGetLastBlockHeightResponse | PlainMessage<QueryGetLastBlockHeightResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllLastBlockHeightRequest
 */
export declare class QueryAllLastBlockHeightRequest extends Message<QueryAllLastBlockHeightRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllLastBlockHeightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllLastBlockHeightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllLastBlockHeightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllLastBlockHeightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllLastBlockHeightRequest;

  static equals(a: QueryAllLastBlockHeightRequest | PlainMessage<QueryAllLastBlockHeightRequest> | undefined, b: QueryAllLastBlockHeightRequest | PlainMessage<QueryAllLastBlockHeightRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllLastBlockHeightResponse
 */
export declare class QueryAllLastBlockHeightResponse extends Message<QueryAllLastBlockHeightResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.LastBlockHeight LastBlockHeight = 1;
   */
  LastBlockHeight: LastBlockHeight[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllLastBlockHeightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllLastBlockHeightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllLastBlockHeightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllLastBlockHeightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllLastBlockHeightResponse;

  static equals(a: QueryAllLastBlockHeightResponse | PlainMessage<QueryAllLastBlockHeightResponse> | undefined, b: QueryAllLastBlockHeightResponse | PlainMessage<QueryAllLastBlockHeightResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetCctxRequest
 */
export declare class QueryGetCctxRequest extends Message<QueryGetCctxRequest> {
  /**
   * @generated from field: string index = 1;
   */
  index: string;

  constructor(data?: PartialMessage<QueryGetCctxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetCctxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetCctxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetCctxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetCctxRequest;

  static equals(a: QueryGetCctxRequest | PlainMessage<QueryGetCctxRequest> | undefined, b: QueryGetCctxRequest | PlainMessage<QueryGetCctxRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetCctxByNonceRequest
 */
export declare class QueryGetCctxByNonceRequest extends Message<QueryGetCctxByNonceRequest> {
  /**
   * @generated from field: int64 chainID = 1;
   */
  chainID: bigint;

  /**
   * @generated from field: uint64 nonce = 2;
   */
  nonce: bigint;

  constructor(data?: PartialMessage<QueryGetCctxByNonceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetCctxByNonceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetCctxByNonceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetCctxByNonceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetCctxByNonceRequest;

  static equals(a: QueryGetCctxByNonceRequest | PlainMessage<QueryGetCctxByNonceRequest> | undefined, b: QueryGetCctxByNonceRequest | PlainMessage<QueryGetCctxByNonceRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetCctxResponse
 */
export declare class QueryGetCctxResponse extends Message<QueryGetCctxResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.CrossChainTx CrossChainTx = 1;
   */
  CrossChainTx?: CrossChainTx;

  constructor(data?: PartialMessage<QueryGetCctxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryGetCctxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetCctxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetCctxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetCctxResponse;

  static equals(a: QueryGetCctxResponse | PlainMessage<QueryGetCctxResponse> | undefined, b: QueryGetCctxResponse | PlainMessage<QueryGetCctxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxRequest
 */
export declare class QueryAllCctxRequest extends Message<QueryAllCctxRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllCctxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllCctxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllCctxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllCctxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllCctxRequest;

  static equals(a: QueryAllCctxRequest | PlainMessage<QueryAllCctxRequest> | undefined, b: QueryAllCctxRequest | PlainMessage<QueryAllCctxRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxResponse
 */
export declare class QueryAllCctxResponse extends Message<QueryAllCctxResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx CrossChainTx = 1;
   */
  CrossChainTx: CrossChainTx[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllCctxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryAllCctxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllCctxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllCctxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllCctxResponse;

  static equals(a: QueryAllCctxResponse | PlainMessage<QueryAllCctxResponse> | undefined, b: QueryAllCctxResponse | PlainMessage<QueryAllCctxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryListPendingCctxRequest
 */
export declare class QueryListPendingCctxRequest extends Message<QueryListPendingCctxRequest> {
  /**
   * @generated from field: int64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  constructor(data?: PartialMessage<QueryListPendingCctxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryListPendingCctxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryListPendingCctxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryListPendingCctxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryListPendingCctxRequest;

  static equals(a: QueryListPendingCctxRequest | PlainMessage<QueryListPendingCctxRequest> | undefined, b: QueryListPendingCctxRequest | PlainMessage<QueryListPendingCctxRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryListPendingCctxResponse
 */
export declare class QueryListPendingCctxResponse extends Message<QueryListPendingCctxResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx CrossChainTx = 1;
   */
  CrossChainTx: CrossChainTx[];

  /**
   * @generated from field: uint64 totalPending = 2;
   */
  totalPending: bigint;

  constructor(data?: PartialMessage<QueryListPendingCctxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryListPendingCctxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryListPendingCctxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryListPendingCctxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryListPendingCctxResponse;

  static equals(a: QueryListPendingCctxResponse | PlainMessage<QueryListPendingCctxResponse> | undefined, b: QueryListPendingCctxResponse | PlainMessage<QueryListPendingCctxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryRateLimiterInputRequest
 */
export declare class QueryRateLimiterInputRequest extends Message<QueryRateLimiterInputRequest> {
  /**
   * @generated from field: uint32 limit = 1;
   */
  limit: number;

  /**
   * @generated from field: int64 window = 2;
   */
  window: bigint;

  constructor(data?: PartialMessage<QueryRateLimiterInputRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryRateLimiterInputRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRateLimiterInputRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRateLimiterInputRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRateLimiterInputRequest;

  static equals(a: QueryRateLimiterInputRequest | PlainMessage<QueryRateLimiterInputRequest> | undefined, b: QueryRateLimiterInputRequest | PlainMessage<QueryRateLimiterInputRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryRateLimiterInputResponse
 */
export declare class QueryRateLimiterInputResponse extends Message<QueryRateLimiterInputResponse> {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx cctxs_missed = 2;
   */
  cctxsMissed: CrossChainTx[];

  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx cctxs_pending = 3;
   */
  cctxsPending: CrossChainTx[];

  /**
   * @generated from field: uint64 total_pending = 4;
   */
  totalPending: bigint;

  /**
   * @generated from field: string past_cctxs_value = 5;
   */
  pastCctxsValue: string;

  /**
   * @generated from field: string pending_cctxs_value = 6;
   */
  pendingCctxsValue: string;

  /**
   * @generated from field: int64 lowest_pending_cctx_height = 7;
   */
  lowestPendingCctxHeight: bigint;

  constructor(data?: PartialMessage<QueryRateLimiterInputResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryRateLimiterInputResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRateLimiterInputResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRateLimiterInputResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRateLimiterInputResponse;

  static equals(a: QueryRateLimiterInputResponse | PlainMessage<QueryRateLimiterInputResponse> | undefined, b: QueryRateLimiterInputResponse | PlainMessage<QueryRateLimiterInputResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryListPendingCctxWithinRateLimitRequest
 */
export declare class QueryListPendingCctxWithinRateLimitRequest extends Message<QueryListPendingCctxWithinRateLimitRequest> {
  /**
   * @generated from field: uint32 limit = 1;
   */
  limit: number;

  constructor(data?: PartialMessage<QueryListPendingCctxWithinRateLimitRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryListPendingCctxWithinRateLimitRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryListPendingCctxWithinRateLimitRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryListPendingCctxWithinRateLimitRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryListPendingCctxWithinRateLimitRequest;

  static equals(a: QueryListPendingCctxWithinRateLimitRequest | PlainMessage<QueryListPendingCctxWithinRateLimitRequest> | undefined, b: QueryListPendingCctxWithinRateLimitRequest | PlainMessage<QueryListPendingCctxWithinRateLimitRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryListPendingCctxWithinRateLimitResponse
 */
export declare class QueryListPendingCctxWithinRateLimitResponse extends Message<QueryListPendingCctxWithinRateLimitResponse> {
  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.CrossChainTx cross_chain_tx = 1;
   */
  crossChainTx: CrossChainTx[];

  /**
   * @generated from field: uint64 total_pending = 2;
   */
  totalPending: bigint;

  /**
   * @generated from field: int64 current_withdraw_window = 3;
   */
  currentWithdrawWindow: bigint;

  /**
   * @generated from field: string current_withdraw_rate = 4;
   */
  currentWithdrawRate: string;

  /**
   * @generated from field: bool rate_limit_exceeded = 5;
   */
  rateLimitExceeded: boolean;

  constructor(data?: PartialMessage<QueryListPendingCctxWithinRateLimitResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryListPendingCctxWithinRateLimitResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryListPendingCctxWithinRateLimitResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryListPendingCctxWithinRateLimitResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryListPendingCctxWithinRateLimitResponse;

  static equals(a: QueryListPendingCctxWithinRateLimitResponse | PlainMessage<QueryListPendingCctxWithinRateLimitResponse> | undefined, b: QueryListPendingCctxWithinRateLimitResponse | PlainMessage<QueryListPendingCctxWithinRateLimitResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryLastZetaHeightRequest
 */
export declare class QueryLastZetaHeightRequest extends Message<QueryLastZetaHeightRequest> {
  constructor(data?: PartialMessage<QueryLastZetaHeightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryLastZetaHeightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLastZetaHeightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLastZetaHeightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLastZetaHeightRequest;

  static equals(a: QueryLastZetaHeightRequest | PlainMessage<QueryLastZetaHeightRequest> | undefined, b: QueryLastZetaHeightRequest | PlainMessage<QueryLastZetaHeightRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryLastZetaHeightResponse
 */
export declare class QueryLastZetaHeightResponse extends Message<QueryLastZetaHeightResponse> {
  /**
   * @generated from field: int64 Height = 1;
   */
  Height: bigint;

  constructor(data?: PartialMessage<QueryLastZetaHeightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryLastZetaHeightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLastZetaHeightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLastZetaHeightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLastZetaHeightResponse;

  static equals(a: QueryLastZetaHeightResponse | PlainMessage<QueryLastZetaHeightResponse> | undefined, b: QueryLastZetaHeightResponse | PlainMessage<QueryLastZetaHeightResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryConvertGasToZetaRequest
 */
export declare class QueryConvertGasToZetaRequest extends Message<QueryConvertGasToZetaRequest> {
  /**
   * @generated from field: int64 chainId = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: string gasLimit = 2;
   */
  gasLimit: string;

  constructor(data?: PartialMessage<QueryConvertGasToZetaRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryConvertGasToZetaRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryConvertGasToZetaRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryConvertGasToZetaRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryConvertGasToZetaRequest;

  static equals(a: QueryConvertGasToZetaRequest | PlainMessage<QueryConvertGasToZetaRequest> | undefined, b: QueryConvertGasToZetaRequest | PlainMessage<QueryConvertGasToZetaRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryConvertGasToZetaResponse
 */
export declare class QueryConvertGasToZetaResponse extends Message<QueryConvertGasToZetaResponse> {
  /**
   * @generated from field: string outboundGasInZeta = 1;
   */
  outboundGasInZeta: string;

  /**
   * @generated from field: string protocolFeeInZeta = 2;
   */
  protocolFeeInZeta: string;

  /**
   * @generated from field: uint64 ZetaBlockHeight = 3;
   */
  ZetaBlockHeight: bigint;

  constructor(data?: PartialMessage<QueryConvertGasToZetaResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryConvertGasToZetaResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryConvertGasToZetaResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryConvertGasToZetaResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryConvertGasToZetaResponse;

  static equals(a: QueryConvertGasToZetaResponse | PlainMessage<QueryConvertGasToZetaResponse> | undefined, b: QueryConvertGasToZetaResponse | PlainMessage<QueryConvertGasToZetaResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeRequest
 */
export declare class QueryMessagePassingProtocolFeeRequest extends Message<QueryMessagePassingProtocolFeeRequest> {
  constructor(data?: PartialMessage<QueryMessagePassingProtocolFeeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMessagePassingProtocolFeeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMessagePassingProtocolFeeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMessagePassingProtocolFeeRequest;

  static equals(a: QueryMessagePassingProtocolFeeRequest | PlainMessage<QueryMessagePassingProtocolFeeRequest> | undefined, b: QueryMessagePassingProtocolFeeRequest | PlainMessage<QueryMessagePassingProtocolFeeRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeResponse
 */
export declare class QueryMessagePassingProtocolFeeResponse extends Message<QueryMessagePassingProtocolFeeResponse> {
  /**
   * @generated from field: string feeInZeta = 1;
   */
  feeInZeta: string;

  constructor(data?: PartialMessage<QueryMessagePassingProtocolFeeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMessagePassingProtocolFeeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMessagePassingProtocolFeeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMessagePassingProtocolFeeResponse;

  static equals(a: QueryMessagePassingProtocolFeeResponse | PlainMessage<QueryMessagePassingProtocolFeeResponse> | undefined, b: QueryMessagePassingProtocolFeeResponse | PlainMessage<QueryMessagePassingProtocolFeeResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryRateLimiterFlagsRequest
 */
export declare class QueryRateLimiterFlagsRequest extends Message<QueryRateLimiterFlagsRequest> {
  constructor(data?: PartialMessage<QueryRateLimiterFlagsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryRateLimiterFlagsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRateLimiterFlagsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRateLimiterFlagsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRateLimiterFlagsRequest;

  static equals(a: QueryRateLimiterFlagsRequest | PlainMessage<QueryRateLimiterFlagsRequest> | undefined, b: QueryRateLimiterFlagsRequest | PlainMessage<QueryRateLimiterFlagsRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryRateLimiterFlagsResponse
 */
export declare class QueryRateLimiterFlagsResponse extends Message<QueryRateLimiterFlagsResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.RateLimiterFlags rateLimiterFlags = 1;
   */
  rateLimiterFlags?: RateLimiterFlags;

  constructor(data?: PartialMessage<QueryRateLimiterFlagsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryRateLimiterFlagsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRateLimiterFlagsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRateLimiterFlagsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRateLimiterFlagsResponse;

  static equals(a: QueryRateLimiterFlagsResponse | PlainMessage<QueryRateLimiterFlagsResponse> | undefined, b: QueryRateLimiterFlagsResponse | PlainMessage<QueryRateLimiterFlagsResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryInboundTrackerRequest
 */
export declare class QueryInboundTrackerRequest extends Message<QueryInboundTrackerRequest> {
  /**
   * @generated from field: int64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: string tx_hash = 2;
   */
  txHash: string;

  constructor(data?: PartialMessage<QueryInboundTrackerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryInboundTrackerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInboundTrackerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInboundTrackerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInboundTrackerRequest;

  static equals(a: QueryInboundTrackerRequest | PlainMessage<QueryInboundTrackerRequest> | undefined, b: QueryInboundTrackerRequest | PlainMessage<QueryInboundTrackerRequest> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.QueryInboundTrackerResponse
 */
export declare class QueryInboundTrackerResponse extends Message<QueryInboundTrackerResponse> {
  /**
   * @generated from field: zetachain.zetacore.crosschain.InboundTracker inbound_tracker = 1;
   */
  inboundTracker?: InboundTracker;

  constructor(data?: PartialMessage<QueryInboundTrackerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.QueryInboundTrackerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInboundTrackerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInboundTrackerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInboundTrackerResponse;

  static equals(a: QueryInboundTrackerResponse | PlainMessage<QueryInboundTrackerResponse> | undefined, b: QueryInboundTrackerResponse | PlainMessage<QueryInboundTrackerResponse> | undefined): boolean;
}

