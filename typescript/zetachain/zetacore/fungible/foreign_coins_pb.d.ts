// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file zetachain/zetacore/fungible/foreign_coins.proto (package zetachain.zetacore.fungible, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CoinType } from "../pkg/coin/coin_pb.js";

/**
 * @generated from message zetachain.zetacore.fungible.ForeignCoins
 */
export declare class ForeignCoins extends Message<ForeignCoins> {
  /**
   *  string index = 1;
   *
   * index
   *
   * @generated from field: string zrc20_contract_address = 2;
   */
  zrc20ContractAddress: string;

  /**
   * @generated from field: string asset = 3;
   */
  asset: string;

  /**
   * @generated from field: int64 foreign_chain_id = 4;
   */
  foreignChainId: bigint;

  /**
   * @generated from field: uint32 decimals = 5;
   */
  decimals: number;

  /**
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * @generated from field: string symbol = 7;
   */
  symbol: string;

  /**
   * @generated from field: zetachain.zetacore.pkg.coin.CoinType coin_type = 8;
   */
  coinType: CoinType;

  /**
   * @generated from field: uint64 gas_limit = 9;
   */
  gasLimit: bigint;

  /**
   * @generated from field: bool paused = 10;
   */
  paused: boolean;

  /**
   * @generated from field: string liquidity_cap = 11;
   */
  liquidityCap: string;

  constructor(data?: PartialMessage<ForeignCoins>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.fungible.ForeignCoins";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForeignCoins;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForeignCoins;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForeignCoins;

  static equals(a: ForeignCoins | PlainMessage<ForeignCoins> | undefined, b: ForeignCoins | PlainMessage<ForeignCoins> | undefined): boolean;
}

