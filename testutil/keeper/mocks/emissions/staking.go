// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	math "cosmossdk.io/math"
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// EmissionStakingKeeper is an autogenerated mock type for the EmissionStakingKeeper type
type EmissionStakingKeeper struct {
	mock.Mock
}

// BondedRatio provides a mock function with given fields: ctx
func (_m *EmissionStakingKeeper) BondedRatio(ctx types.Context) math.LegacyDec {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for BondedRatio")
	}

	var r0 math.LegacyDec
	if rf, ok := ret.Get(0).(func(types.Context) math.LegacyDec); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(math.LegacyDec)
	}

	return r0
}

// NewEmissionStakingKeeper creates a new instance of EmissionStakingKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmissionStakingKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmissionStakingKeeper {
	mock := &EmissionStakingKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
